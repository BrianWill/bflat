encapsulate textbuffer

encapsulate cursor / selection  ('Cursor'? 'CursorSelection', 'Pointer')


better scrolling while mouse dragging


cut

default to copy/cut the current line if no selection?

with multiple lines selected, shift-cmd-k should delete all of the lines

browse files from server (a file browsing page with links to open each file in its own editor page)
    for now, just use browser tabs for working with multiple files


when mutli-lines selected:
    tab adds leading spaces to the lines
when line or multi-lines selected:
    shift-tab removes leading spaces from the line(s)

better scroll adjust behavior when deleting/replacing selection when scrolled at bottom of text

change cmd-u cmd-i hotkeys into pageup/pagedown



draw scrollbar indicator of current scroll position



offscreen canvas buffers for smooth scrolling (use at least 3, and copy from these buffers to onscreen canvas)
    cursor is never rendered on off-screen bufffers, always rendered last on top of dispaly canvas




search and replace

undo/redo

multi-tabs


don't preventDefault for some browser hotkeys (reload?, new tab? ctrl-s should not print a character)



horizontal scroll

word wrapping

option to insert actual tab characters instead of spaces

support tab size other than 4 spaces


ctrl-A



prev/nextWhitespaceSkip should not skip past ( ) { } [ ]  ? desired behavior depends upon language mode


efficient text buffer using TextArea? (presumably it could avoid producing so much garbage as user types)
    native byte array? 

    function bin2String(array) {
        return String.fromCharCode.apply(String, array);
    }

    use views w/ buffers?


firefox: dom.events.async.clipboard must be enabled in about:config? or is that only for file:///
    chrome will ask for permission repeatedly for clipboard permission when viewing page via file:/// 
        (serving via localhost fixes problem)


LOL: https://www.w3.org/TR/2dcontext/#best-practices