- account for checking A as subtype of interface B when A implements a descendent interface of B



- check for name collisions between namespace qualified names and locals, e.g. foo.Bar and foo (is c# smart about this?)

    (maybe just underscore prefix all namespace names in csharp)

- account for member access levels




- properties


- static methods and fields

    todo: should account for namespace of classes


- generics



- indexer methods

(ns red.orange.blue)      // 'blue' is the short name; (in C#, equivalent of Red.Orange.Blue) 

                          // file convention: shortname_file.bf
                          // e.g. file 'foo' in namespace with shortname 'bar':
                          //            bar_foo.bf



(import red.orange.blue -alias something)       // in case shortname conflicts with other import, give it alias
                                 